[["git.html", "Capítulo 1 Git 1.1 Diapositivas 1.2 Instalación de Git 1.3 Trabajando con Git en la terminal 1.4 Trabajar con repositorio 1.5 Clonar un repositorio de GitHub", " Capítulo 1 Git ¿Qué es Git? Git es un software de control de versiones distribuido y desarrollado por Linus Torvalds, para optimizar el trabajo en proyecto que cuenten con un gran número de archivos. 1.1 Diapositivas Puedes descargar las diapositivas del curso aquí 1.2 Instalación de Git 1.2.1 Linux Si estás en Fedora puedes utilizar yum: yum install git Si tu Sistema operativo está basado en Debiancomo Ubuntu puedes usar apt-get o apt. sudo apt-get install git 1.2.2 macOS Existen diversas opciones para instalar Git en macOS que puedes revisar [aquí] (https://git-scm.com/download/mac). 1.2.3 Windows Para instalar Git en Windows, revisa el siguiente link. 1.3 Trabajando con Git en la terminal 1.3.1 Version de Git Conocer versión de Git, escribe en tu terminal: git --version 1.3.2 Editar valores de configuración Es importante revisar los espacios, mayúsculas y minúsculas. Ingresar tu nombre de usuario entre comillas \" git config --global user.name &quot;User name&quot; Ingresar tu correo electrónico: git config --global user.email &quot;myemail@example.com&quot; Revisa los valores de configuración git config --list 1.3.3 Pidiendo ayuda Para pedir ayuda, usamos el comando help de las siguientes maneras git help config git config --help 1.3.4 Comandos de apoyo para manejo de archivos desde terminal cd - Cambiar de directorio de trabajo ls - Listar lo que hay en un directorio clear- Limpiar la terminal pwd - Conocer la ruta de nuestro directorio de trabajo 1.4 Trabajar con repositorio 1.4.1 Iniciar un repositorio Para iniciar un repositario usamos init git init 1.4.2 Revisar el estatus de un repositorio Para iniciar un repositario usamos status git status 1.4.3 Agregar archivos Para agregar aarchivos a un repositario usamos add git add -A También podemos agregar archivos individuales git add .gitignore 1.4.4 Eliminando archivos del área de preparación Para eliminar archivos, usamos reset seguido del nombre del archivo que queremos eliminar. git reset nombre_archivo.txt 1.4.5 Agregando comentarios Para agregar comentarios, usamos commit y ponemos entre comillas \"el comentario que deseamos agregar. git commit -m &quot;Mi primer comentario&quot; 1.5 Clonar un repositorio de GitHub Importante: Para éste paso ya debes tener tu cuenta de GitHub. git clone url_del_repositorio_de_github 1.5.1 Creando una rama (branch) Usamos branch git branch -a 1.5.2 Mostrar los cambios de un repositorio Usamos diff git diff 1.5.3 Enviar cambios a repositorio remoto Para enviar cambios a un repositorio remoto usamos push como se indica: git push origin main 1.5.4 Trabajar sobre una rama (branch) Para trabajar sobre una rama en particular, usamos branch seguido de la rama sobre la cual queremos trabajar git branch rama_prueba Para guardar cambios en la rama , usamos push y origin seguido del nombre de la rama git push -u origin rama_prueba 1.5.5 Fusionar ramas Si queremos unir dos ramas, usamos merged git branch --merged 1.5.6 Eliminar una rama Para eliminar una rama usamos branch -dseguido del nombre de la rama que queremos eliminar. git branch -d rama_prueba También podemos usar: git push origin --delete rama_prueba 1.5.7 Ver los cambios en ramas Para ver los cambios en las ramas usamos branch -a git branch -a "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
